name: Backend CI/CD

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*' 
  pull_request:
    branches: [ main, dev ]

  workflow_dispatch:
  
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag (if exists)
      id: version
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        else
          echo "VERSION=none" >> $GITHUB_ENV
        fi

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      working-directory: ./backend
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov factory-boy

    - name: Run tests with pytest
      working-directory: ./backend/app
      env:
        PYTHONPATH: .
        SQLALCHEMY_DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
        JWT_SECRET_KEY: test_jwt_secret
        SECRET_KEY: test_secret_key
      run: |
        python -m pytest tests/ -v --maxfail=5 --disable-warnings --cov=app --cov-report=xml

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./backend/Dockerfile.backend  
        push: false
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/resume-review/backend:latest

    - name: Push Docker image with version tag
      if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v5
      with:
        context: .  
        file: ./backend/Dockerfile.backend 
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/resume-review/backend:latest
          ${{ secrets.DOCKER_USERNAME }}/resume-review/backend:${{ env.VERSION }}

      #   - name: Deploy to remote host via SSH
      # uses: appleboy/ssh-action@v0.1.10
      # with:
      #   host: ${{ secrets.SSH_HOST }}
      #   username: ${{ secrets.SSH_USER }}
      #   password: ${{ secrets.SSH_PASS }}
      #   port: ${{ secrets.SSH_PORT }}
      #   script: |
      #     cd /app/
      #     docker stop backend || true
      #     docker rm backend || true
      #     docker rmi ${{ secrets.DOCKER_USERNAME }}/resuem_review/backend:latest
      #     docker pull ${{ secrets.DOCKER_USERNAME }}/resuem_review/backend:latest
      #     docker compose -f docker-compose.prod.yml --env-file ./backend/app/.env up -d --force-recreate backend:latest
