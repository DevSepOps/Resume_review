{{- if .Values.portainer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portainer
  namespace: {{ .Values.global.namespace }}
  labels:
    app: portainer
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portainer
  template:
    metadata:
      labels:
        app: portainer
    spec:
      containers:
      - name: portainer
        image: "{{ .Values.portainer.image.repository }}:{{ .Values.portainer.image.tag }}"
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: portainer-data
          mountPath: /data
        - name: docker-sock
          mountPath: /var/run/docker.sock
        resources:
          {{- toYaml .Values.portainer.resources | nindent 12 }}
      volumes:
      - name: portainer-data
        persistentVolumeClaim:
          claimName: portainer-pvc
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  name: portainer
  namespace: {{ .Values.global.namespace }}
  labels:
    app: portainer
spec:
  type: ClusterIP
  ports:
  - port: {{ .Values.portainer.service.port }}
    targetPort: 9000
    protocol: TCP
  selector:
    app: portainer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: portainer-pvc
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.portainer.persistence.size }}
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
{{- end }}