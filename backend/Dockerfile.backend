# Stage 1: Builder
FROM python:3.12-slim-bullseye as builder

WORKDIR /app

RUN apt-get update && apt-get install -y \
    gcc \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

COPY ./backend/requirements.txt .
RUN pip install --user --no-cache-dir -r requirements.txt

# Stage 2: Runtime
FROM python:3.12-slim-bullseye

WORKDIR /app

RUN apt-get update && apt-get install -y \
    netcat-openbsd \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

COPY --from=builder /root/.local /root/.local
ENV PATH=/root/.local/bin:$PATH

COPY ./backend/alembic.ini .
COPY ./backend/alembic/ alembic/
COPY ./backend/app/ app/

RUN mkdir -p uploads/resumes

EXPOSE 8000

RUN echo '#!/bin/bash\n\
set -e\n\
cd /app\n\
echo "Waiting for database..."\n\
until pg_isready -h resume_app_db -p 5432 -U $POSTGRES_USER; do\n\
  sleep 2\n\
done\n\
echo "Database is ready!"\n\
echo "Running migrations..."\n\
alembic upgrade head\n\
echo "Starting server..."\n\
uvicorn app.main:app --host 0.0.0.0 --port 8000' > /app/entrypoint.sh \
&& chmod +x /app/entrypoint.sh

CMD ["/app/entrypoint.sh"]